name: Prepare Release
on:
  workflow_dispatch:
    inputs:
        version:
          description: 'Version'
          required: true
          default: 'patch'

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup
      uses: ./.github/actions/setup

    - name: Verify PAT
      run: npm run verify-pat -- --pat ${{ secrets.VSCE_PAT }}

    - name: Update version number
      id: version
      run: |
        npm version ${{ github.event.inputs.version }}
        echo "::set-output name=npm_package_version::$(<./out/version.txt)"
        RELEASE="$(cat ./out/RELEASE.md)"
        RELEASE="${RELEASE//'%'/'%25'}"
        RELEASE="${RELEASE//$'\n'/'%0A'}"
        RELEASE="${RELEASE//$'\r'/'%0D'}"
        echo "::set-output name=release_notes::$RELEASE"
        echo "$(cat ./out/RELEASE.md)"

    # - name: Stage changes
    #   run: |
    #     git add CHANGELOG.md package.json package-lock.json
    #     git commit -m "Release ${{ steps.version.outputs.npm_package_version }}"

    # - name: Create Pull Request
    #   id: create-pull-request
    #   uses: peter-evans/create-pull-request@v3
    #   with:
    #       author: php-docblocker <php-docblocker@brayfield.co.uk>
    #       committer: php-docblocker <php-docblocker@brayfield.co.uk>
    #       token: ${{ secrets.BOT_GITHUB_PAT }}
    #       title: ${{ steps.version.outputs.npm_package_version }}
    #       branch: releases/${{ steps.version.outputs.npm_package_version }}
    #       body: ${{ steps.version.outputs.release_notes }}
    #       labels: release candidate

    # - name: Enable Pull Request Automerge
    #   if: steps.create-pull-request.outputs.pull-request-operation == 'created'
    #   uses: peter-evans/enable-pull-request-automerge@v1
    #   with:
    #     token: ${{ secrets.BOT_GITHUB_PAT }}
    #     pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}